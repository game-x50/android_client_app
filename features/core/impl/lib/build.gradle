apply from: rootProject.ext[GradleExtraArgs.baseAndroidLibrary]
apply from: rootProject.ext[GradleExtraArgs.androidAllBuildVariants]

apply from: rootProject.ext[GradleExtraArgs.dagger2Kapt]
apply from: rootProject.ext[GradleExtraArgs.kotlinxSerilization]

def proguardRulesFile = "proguard-rules-core_impl.pro"

android {

    defaultConfig {
        versionCode = 1
        versionName = "1.0"

        consumerProguardFiles(proguardRulesFile)
    }

    sourceSets {
        debug {
            java.srcDirs += "src/debug_tools/java"
        }
        staging {
            java.srcDirs += "src/staging_tools/java"
        }
        release {
            java.srcDirs += "src/release_tools/java"
        }
    }

    resourcePrefix("core_impl_")
}

dependencies {
    api(projects.features.core.api.lib)
    api(projects.features.core.logger.api.lib)

    compileOnly(projects.features.core.extensions)
    compileOnly(projects.features.core.android.extensions)
    compileOnly(projects.features.core.android.api)
    compileOnly(projects.features.core.android.storage)

    debugApi(projects.features.core.api.debugTools)
    stagingApi(projects.features.core.api.stagingTools)

    debugImplementation(projects.features.core.impl.debugTools)
    stagingImplementation(projects.features.core.impl.stagingTools)

    implementation(Deps.rxJava2)//todo: implementation here instead of app module because of because ot some dependencies conflicts, try to use compileOnly here and implementation in app module
    implementation(Deps.rxJava2Android)

    compileOnly(Deps.androidxAppCompat)
}